name: Deploy to VPS

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: boursecrawler

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set repository owner lowercase
        run: echo "DOCKER_REGISTRY=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Login to GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            # Pull the latest image
            docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest

            # Stop and remove the old container if it exists
            docker stop ${{ env.DOCKER_IMAGE }} || true
            docker rm ${{ env.DOCKER_IMAGE }} || true

            # Create necessary directories
            mkdir -p /home/boursecrawler/data
            cd /home/boursecrawler

            echo "${{ env.ENV_FILE }}" > .env

            # Run the new container
            docker run -d \
              --name ${{ env.DOCKER_IMAGE }} \
              --restart unless-stopped \
              -v /home/boursecrawler/data:/app/data \
              --env-file .env \
              ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest

            # Clean up old images
            docker image prune -f
